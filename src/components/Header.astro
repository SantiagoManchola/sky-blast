---
import skyBlastLogo from "../assets/sky-blast.png";
---

<header
  class="sticky top-0 left-0 right-0 z-999 border-b border-gray-100"
  style="background-color: #FDFDFF;"
>
  <nav class="container mx-auto px-4 sm:px-6 lg:px-8 text-black">
    <div class="flex items-center justify-between h-16 lg:h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="#" class="flex items-center">
          <img
            src={skyBlastLogo.src}
            alt="SkyBlast Logo"
            class="h-8 lg:h-10 w-auto"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center" style="gap: 80px;">
        <a
          href="#about"
          class="hover:text-primary transition-colors duration-200 font-body font-light text-base leading-none"
        >
          About us
        </a>
        <a
          href="#services"
          class="hover:text-primary transition-colors duration-200 font-body font-light text-base leading-none"
        >
          Our Services
        </a>
        <a
          href="#clients"
          class="hover:text-primary transition-colors duration-200 font-body font-light text-base leading-none"
        >
          Our Clients
        </a>
        <a
          href="#contact"
          class="hover:bg-opacity-90 transition-all duration-200 px-4 py-2 rounded-3xl bg-blue font-body font-bold text-base leading-none"
        >
          Contact Us
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="lg:hidden">
        <button
          type="button"
          class="mobile-menu-button p-2 rounded-md hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary"
          aria-label="Toggle menu"
          onclick="return false;"
        >
          <svg
            class="w-6 h-6 pointer-events-none"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              class="pointer-events-none"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div
      class="mobile-menu sticky top-0 left-0 right-0 bg-white shadow-lg transform translate-y-0 opacity-0 transition-all duration-300 ease-in-out lg:hidden z-40 hidden"
    >
      <div class="px-4 py-6 space-y-4" style="background-color: #FDFDFF;">
        <a
          href="#about"
          class="block px-4 py-3 hover:text-primary hover:bg-gray-50 rounded-lg transition-all duration-200 font-body font-light text-base leading-none"
        >
          About us
        </a>
        <a
          href="#services"
          class="block px-4 py-3 hover:text-primary hover:bg-gray-50 rounded-lg transition-all duration-200 font-body font-light text-base leading-none"
        >
          Our Services
        </a>
        <a
          href="#clients"
          class="block px-4 py-3 hover:text-primary hover:bg-gray-50 rounded-lg transition-all duration-200 font-body font-light text-base leading-none"
        >
          Our Clients
        </a>
        <a
          href="#contact"
          class="block mx-4 mt-6 text-center px-4 py-3 rounded-3xl transition-all duration-200 hover:bg-opacity-90 bg-blue font-body font-bold text-base leading-none"
        >
          Contact Us
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle with smooth animations
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.querySelector(".mobile-menu-button");
    const mobileMenu = document.querySelector(".mobile-menu");
    let isMenuOpen = false;

    if (mobileMenuButton && mobileMenu) {
      // Ensure no default behavior
      mobileMenuButton.addEventListener("click", (e) => {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();

        // Toggle menu state
        isMenuOpen = !isMenuOpen;

        if (isMenuOpen) {
          // Show menu
          mobileMenu.classList.remove("hidden");
          setTimeout(() => {
            mobileMenu.classList.remove("opacity-0");
            mobileMenu.classList.add("opacity-100");
          }, 10);
        } else {
          // Hide menu
          mobileMenu.classList.remove("opacity-100");
          mobileMenu.classList.add("opacity-0");
          setTimeout(() => {
            mobileMenu.classList.add("hidden");
          }, 300);
        }

        // Explicitly return false to prevent any default action
        return false;
      });

      // Additional safety: prevent any form of navigation
      mobileMenuButton.addEventListener("mousedown", (e) => {
        e.preventDefault();
      });

      mobileMenuButton.addEventListener("touchstart", (e) => {
        e.preventDefault();
      });
    }

    // Close mobile menu when clicking on links
    const mobileLinks = mobileMenu?.querySelectorAll("a");
    mobileLinks?.forEach((link) => {
      link.addEventListener("click", () => {
        isMenuOpen = false;
        if (mobileMenu) {
          mobileMenu.classList.remove("opacity-100");
          mobileMenu.classList.add("opacity-0");
          setTimeout(() => {
            mobileMenu.classList.add("hidden");
          }, 300);
        }
      });
    });

    // Close mobile menu when clicking outside
    document.addEventListener("click", (e) => {
      if (
        isMenuOpen &&
        !mobileMenuButton?.contains(e.target as Node) &&
        !mobileMenu?.contains(e.target as Node)
      ) {
        isMenuOpen = false;
        if (mobileMenu) {
          mobileMenu.classList.remove("opacity-100");
          mobileMenu.classList.add("opacity-0");
          setTimeout(() => {
            mobileMenu.classList.add("hidden");
          }, 300);
        }
      }
    });

    // Smooth scroll for navigation links
    const allNavLinks = document.querySelectorAll('header a[href^="#"]');
    allNavLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        const targetId = link.getAttribute("href")?.substring(1);
        const targetElement = document.getElementById(targetId || "");

        if (targetElement) {
          const headerHeight =
            document.querySelector("header")?.offsetHeight || 0;
          const targetPosition = targetElement.offsetTop - headerHeight;

          window.scrollTo({
            top: targetPosition,
            behavior: "smooth",
          });
        }
      });
    });
  });
</script><style>
  /* Mobile menu animations */
  .mobile-menu {
    transition:
      transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Smooth hover effects for navigation links */
  header a {
    transition: all 0.2s ease-in-out;
  }

  /* Mobile menu button hover effect */
  .mobile-menu-button:hover {
    transform: scale(1.05);
  }

  /* Contact button hover effects */
  header a[href="#contact"]:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(179, 222, 251, 0.4);
  }

  /* Logo hover effect */
  header img:hover {
    transform: scale(1.05);
    transition: transform 0.2s ease-in-out;
  }
</style>
